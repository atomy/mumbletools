// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `_ServerDel.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Murmur;

public interface _ServerDel extends Ice._ObjectDel
{
    boolean isRunning(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException;

    void start(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException,
               ServerFailureException;

    void stop(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    void delete(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    int id(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException;

    void addCallback(ServerCallbackPrx cb, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidCallbackException,
               InvalidSecretException,
               ServerBootedException;

    void removeCallback(ServerCallbackPrx cb, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidCallbackException,
               InvalidSecretException,
               ServerBootedException;

    void setAuthenticator(ServerAuthenticatorPrx auth, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidCallbackException,
               InvalidSecretException,
               ServerBootedException;

    String getConf(String key, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException;

    java.util.Map<java.lang.String, java.lang.String> getAllConf(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException;

    void setConf(String key, String value, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException;

    void setSuperuserPassword(String pw, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException;

    LogEntry[] getLog(int first, int last, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException;

    int getLogLen(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException;

    java.util.Map<java.lang.Integer, User> getUsers(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    java.util.Map<java.lang.Integer, Channel> getChannels(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    byte[][] getCertificateList(int session, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidSessionException,
               ServerBootedException;

    Tree getTree(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    Ban[] getBans(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    void setBans(Ban[] bans, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    void kickUser(int session, String reason, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidSessionException,
               ServerBootedException;

    User getState(int session, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidSessionException,
               ServerBootedException;

    void setState(User state, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               InvalidSessionException,
               ServerBootedException;

    void sendMessage(int session, String text, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidSessionException,
               ServerBootedException;

    boolean hasPermission(int session, int channelid, int perm, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               InvalidSessionException,
               ServerBootedException;

    void addContextCallback(int session, String action, String text, ServerContextCallbackPrx cb, int ctx, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidCallbackException,
               InvalidSecretException,
               ServerBootedException;

    void removeContextCallback(ServerContextCallbackPrx cb, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidCallbackException,
               InvalidSecretException,
               ServerBootedException;

    Channel getChannelState(int channelid, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               ServerBootedException;

    void setChannelState(Channel state, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               ServerBootedException;

    void removeChannel(int channelid, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               ServerBootedException;

    int addChannel(String name, int parent, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               ServerBootedException;

    void sendMessageChannel(int channelid, boolean tree, String text, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               ServerBootedException;

    void getACL(int channelid, ACLListHolder acls, GroupListHolder groups, Ice.BooleanHolder inherit, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               ServerBootedException;

    void setACL(int channelid, ACL[] acls, Group[] groups, boolean inherit, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               ServerBootedException;

    void addUserToGroup(int channelid, int session, String group, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               InvalidSessionException,
               ServerBootedException;

    void removeUserFromGroup(int channelid, int session, String group, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidChannelException,
               InvalidSecretException,
               InvalidSessionException,
               ServerBootedException;

    void redirectWhisperGroup(int session, String source, String target, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidSessionException,
               ServerBootedException;

    java.util.Map<java.lang.Integer, java.lang.String> getUserNames(int[] ids, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    java.util.Map<java.lang.String, java.lang.Integer> getUserIds(String[] names, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    int registerUser(java.util.Map<UserInfo, java.lang.String> info, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidUserException,
               ServerBootedException;

    void unregisterUser(int userid, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidUserException,
               ServerBootedException;

    void updateRegistration(int userid, java.util.Map<UserInfo, java.lang.String> info, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidUserException,
               ServerBootedException;

    java.util.Map<UserInfo, java.lang.String> getRegistration(int userid, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidUserException,
               ServerBootedException;

    java.util.Map<java.lang.Integer, java.lang.String> getRegisteredUsers(String filter, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    int verifyPassword(String name, String pw, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;

    byte[] getTexture(int userid, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidUserException,
               ServerBootedException;

    void setTexture(int userid, byte[] tex, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               InvalidTextureException,
               InvalidUserException,
               ServerBootedException;

    int getUptime(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException,
               ServerBootedException;
}
