// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `_MetaDelD.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Murmur;

public final class _MetaDelD extends Ice._ObjectDelD implements _MetaDel
{
    public void
    addCallback(final MetaCallbackPrx cb, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidCallbackException,
               InvalidSecretException
    {
        throw new Ice.CollocationOptimizationException();
    }

    public ServerPrx[]
    getAllServers(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException
    {
        throw new Ice.CollocationOptimizationException();
    }

    public ServerPrx[]
    getBootedServers(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException
    {
        throw new Ice.CollocationOptimizationException();
    }

    public java.util.Map<java.lang.String, java.lang.String>
    getDefaultConf(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException
    {
        throw new Ice.CollocationOptimizationException();
    }

    public ServerPrx
    getServer(final int id, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException
    {
        throw new Ice.CollocationOptimizationException();
    }

    public String
    getSlice(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper
    {
        throw new Ice.CollocationOptimizationException();
    }

    public java.util.Map<java.lang.String, java.lang.String>
    getSliceChecksums(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper
    {
        throw new Ice.CollocationOptimizationException();
    }

    public int
    getUptime(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper
    {
        throw new Ice.CollocationOptimizationException();
    }

    public void
    getVersion(final Ice.IntHolder major, final Ice.IntHolder minor, final Ice.IntHolder patch, final Ice.StringHolder text, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper
    {
        throw new Ice.CollocationOptimizationException();
    }

    public ServerPrx
    newServer(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidSecretException
    {
        throw new Ice.CollocationOptimizationException();
    }

    public void
    removeCallback(final MetaCallbackPrx cb, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               InvalidCallbackException,
               InvalidSecretException
    {
        throw new Ice.CollocationOptimizationException();
    }
}
